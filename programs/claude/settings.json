{
  "permissions": {
    "allow": [
      "Bash(gemini:*)",

      "Bash(git status:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(git fetch:*)",
      "Bash(git log:*)",
      "Bash(git diff:*)",
      "Bash(git branch:*)",
      "Bash(git merge:*)",
      "Bash(git rebase:*)",
      "Bash(git stash:*)",
      "Bash(git remote:*)",
      "Bash(git reset:*)",
      "Bash(git clean:*)",
      "Bash(git tag:*)",
      "Bash(git show:*)",
      "Bash(git blame:*)",
      "Bash(git clone:*)",
      "Bash(git init:*)",
      "Bash(git worktree:*)",

      "Bash(ls:*)",
      "Bash(ll:*)",
      "Bash(cat:*)",
      "Bash(less:*)",
      "Bash(more:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "Bash(cut:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(wc:*)",
      "Bash(find:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(mkdir:*)",
      "Bash(rmdir:*)",
      "Bash(touch:*)",
      "Bash(diff:*)",
      "Bash(tree:*)",
      "Bash(pwd:*)",
      "Bash(cd:*)",
      "Bash(pushd *)",
      "Bash(popd*)",
      "Bash(basename *)",
      "Bash(dirname *)",
      "Bash(realpath *)",
      "Bash(readlink *)",
      "Bash(curl:*)",

      "Bash(echo $*)",
      "Bash(echo \"$*\")",
      "Bash(echo '$*')",
      "Bash(echo *)",
      "Bash(export *)",
      "Bash(unset *)",
      "Bash(env*)",
      "Bash(env | grep*)",
      "Bash(printenv*)",
      "Bash(printenv | grep*)",
      "Bash(set*)",
      "Bash(source *)",

      "Bash(jq *)",
      "Bash(jq .*)",
      "Bash(jq -r *)",
      "Bash(jq -c *)",
      "Bash(jq -s *)",
      "Bash(jq --tab*)",
      "Bash(* | jq)",
      "Bash(* | jq .)",
      "Bash(* | jq -r *)",
      "Bash(* | jq '.*')",
      "Bash(* | jq \".*\")",

      "Bash(* | jq '. | *')",
      "Bash(yq *)",
      "Bash(yq eval *)",
      "Bash(yq -i *)",
      "Bash(* | yq*)",

      "Bash(ps *)",
      "Bash(ps aux*)",
      "Bash(ps -ef*)",
      "Bash(ps | grep*)",
      "Bash(pgrep *)",
      "Bash(kill *)",
      "Bash(kill -9 *)",
      "Bash(pkill *)",
      "Bash(killall *)",
      "Bash(jobs*)",
      "Bash(fg*)",
      "Bash(bg*)",
      "Bash(nohup *)",
      "Bash(sleep *)",
      "Bash(wait*)",

      "Bash(date*)",
      "Bash(date +*)",
      "Bash(whoami*)",
      "Bash(hostname*)",
      "Bash(uname *)",
      "Bash(which *)",
      "Bash(whereis *)",
      "Bash(id*)",
      "Bash(groups*)",
      "Bash(df *)",
      "Bash(du *)",
      "Bash(free*)",
      "Bash(top*)",
      "Bash(htop*)",
      "Bash(uptime*)",
      "Bash(w*)",
      "Bash(who*)",
      "Bash(last*)",
      "Bash(history*)",
      "Bash(alias*)",
      "Bash(type *)",
      "Bash(ping *)",
      "Bash(netstat *)",
      "Bash(ss *)",
      "Bash(lsof *)",
      "Bash(lsof -i *)",
      "Bash(sudo lsof *)",
      "Bash(nslookup *)",
      "Bash(dig *)",
      "Bash(host *)",
      "Bash(wget *)",
      "Bash(nc -z *)",
      "Bash(telnet *)",
      "Bash(traceroute *)",
      "Bash(ip *)",
      "Bash(ifconfig*)",

      "Bash(gh *)",
      "Bash(gh auth status*)",
      "Bash(gh repo *)",
      "Bash(gh repo view*)",
      "Bash(gh repo list*)",
      "Bash(gh repo clone*)",
      "Bash(gh repo create*)",
      "Bash(gh pr *)",
      "Bash(gh pr create*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr view*)",
      "Bash(gh issue view:*)",
      "Bash(gh issue comment:*)",
      "Bash(gh api *)",
      "Bash(gh workflow *)",
      "Bash(gh release *)",

      "Bash(./*.sh*)",
      "Bash(./scripts/*)",
      "Bash(* | *)",
      "Bash(* > *)",
      "Bash(* >> *)",
      "Bash(* 2>&1*)",
      "Bash(* 2> *)",
      "Bash(* < *)",
      "Bash(* << *)",
      "Bash(* <<< *)",
      "Bash(* && *)",
      "Bash(* || *)",
      "Bash(* ; *)",

      "Bash(tar *)",
      "Bash(tar -czf *)",
      "Bash(tar -xzf *)",
      "Bash(tar -cjf *)",
      "Bash(tar -xjf *)",
      "Bash(tar -tvf *)",
      "Bash(tar --exclude=* *)",
      "Bash(gzip *)",
      "Bash(gzip -d *)",
      "Bash(gzip -9 *)",
      "Bash(gunzip *)",
      "Bash(zip *)",
      "Bash(zip -r *)",
      "Bash(zip -u *)",
      "Bash(zip -d *)",
      "Bash(unzip *)",
      "Bash(unzip -l *)",
      "Bash(unzip -o *)",
      "Bash(unzip -d * *)",
      "Bash(bzip2 *)",
      "Bash(bunzip2 *)",
      "Bash(xz *)",
      "Bash(unxz *)",
      "Bash(tr *)",
      "Bash(fold *)",
      "Bash(column *)",
      "Bash(paste *)",
      "Bash(join *)",
      "Bash(split *)",
      "Bash(csplit *)",
      "Bash(tee *)",
      "Bash(xargs *)",
      "Bash(printf *)",
      "Bash(test *)",
      "Bash([ *)",
      "Bash([[ *)",
      "Bash(true*)",
      "Bash(false*)",
      "Bash(yes*)",
      "Bash(seq *)",
      "Bash(shuf *)",
      "Bash(bc *)",
      "Bash(expr *)",
      "Bash(timeout *)",
      "Bash(time *)",
      "Bash(watch *)",

      "Bash(npm test -- --coverage*)",
      "Bash(npm test -- --watch*)",
      "Bash(npm test -- --no-coverage*)",
      "Bash(jest *)",
      "Bash(npx jest *)",
      "Bash(npm run test:*)",

      "Bash(pip *)",
      "Bash(pip3 *)",

      "Bash(direnv *)",
      "Bash(direnv allow*)",
      "Bash(direnv deny*)",
      "Bash(direnv status*)",
      "Bash(direnv reload*)",

      "Bash(tmux *)",
      "Bash(tmux new*)",
      "Bash(tmux attach*)",
      "Bash(tmux ls*)",
      "Bash(tmux kill-session*)",
      "Bash(tmux send-keys *)",
      "Bash(tmux capture-pane*)",

      "Bash(lsof -i :*)",
      "Bash(sudo lsof -i :*)",
      "Bash(netstat -an | grep *)",
      "Bash(ss -an | grep *)",
      "Bash(nc -zv * *)",

      "Bash(tail -f logs/*)",
      "Bash(tail -f *.log*)",
      "Bash(grep -i error logs/*)",
      "Bash(grep -i warn logs/*)",
      "Bash(journalctl -xeu *)",

      "Bash(docker volume ls | grep *)",
      "Bash(docker volume inspect * | jq*)",
      "Bash(docker volume rm $(docker volume ls -q)*)",

      "Bash(for * in *; do *; done*)",
      "Bash(while *; do *; done*)",
      "Bash(if *; then *; fi*)",
      "Bash(case * in *) *;; esac*)",

      "Bash(* &)",
      "Bash(nohup * &)",
      "Bash(* > /dev/null 2>&1 &)",
      "Bash(disown*)",

      "Bash(echo * | tr *)",
      "Bash(echo * | sed *)",
      "Bash(echo * | awk *)",
      "Bash(echo * | cut *)",
      "Bash(echo * | base64*)",
      "Bash(echo * | base64 -d*)",

      "Bash(curl -f http://localhost:*/health*)",
      "Bash(curl -f http://localhost:*/api/health*)",
      "Bash(curl -f http://localhost:*/metrics*)",
      "Bash(wget -O- http://localhost:*/health*)",

      "Bash(git remote show origin*)",
      "Bash(git ls-remote *)",
      "Bash(git fetch --prune*)",
      "Bash(git gc*)",
      "Bash(git reflog*)",

      "Bash(date -u*)",
      "Bash(TZ=* date*)",

      "Bash(tar -czf * *)",
      "Bash(tar -xzf *)",
      "Bash(tar -tvf *)",
      "Bash(zip -r * *)",
      "Bash(unzip -l *)",

      "Bash(stat *)",
      "Bash(getfacl *)",
      "Bash(file *)",
      "Bash(file -b *)",

      "Bash(pidof *)",
      "Bash(pstree *)",
      "Bash(lsof -p *)",
      "Bash(strace -p *)",

      "Bash(crontab -l*)",
      "Bash(crontab -e*)",

      "Bash(cat /etc/cron*)",

      "Bash(iotop*)",
      "Bash(iftop*)",
      "Bash(nethogs*)",
      "Bash(dstat*)",
      "Bash(vmstat*)",
      "Bash(iostat*)",

      "WebFetch(domain:localhost)",
      "WebFetch(domain:127.0.0.1)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:n8n.io)",

      "WebSearch(**)",
      "Read(**)",
      "Edit(**)",
      "MultiEdit(**)",
      "Write(**)",
      "Glob(**)",
      "Grep(**)",
      "LS(**)",
      "TodoRead()",
      "TodoWrite(**)",
      "Task(**)",
      "List(**)",
    ],
    "deny": [
      "Bash(rm -rf /*)",
      "Bash(rm -rf /)",
      "Bash(sudo rm -rf /*)",
      "Bash(sudo rm -rf /)",
      "Bash(dd if=/dev/zero of=/dev/*)",
      "Bash(dd if=/dev/random of=/dev/*)",
      "Bash(mkfs*)",
      "Bash(fdisk*)",
      "Bash(parted*)",
      "Bash(:(){ :|:& };:*)",
      "Bash(*fork*bomb*)",
      "Bash(> /dev/sda*)",
      "Bash(> /dev/nvme*)",
      "Bash(> /dev/sd*)",
      "Bash(cat /dev/urandom > *)",
      "Bash(* | nc -l*)",
      "Bash(* | netcat -l*)",
      "Bash(* | socat *)",
      "Bash(* | base64 -d | sh*)",
      "Bash(* | base64 -d | bash*)",
      "Bash(curl * | sh*)",
      "Bash(curl * | bash*)",
      "Bash(wget * | sh*)",
      "Bash(wget * | bash*)",
      "Bash(sudo passwd*)",
      "Bash(passwd*)",
      "Bash(sudo useradd*)",
      "Bash(sudo userdel*)",
      "Bash(sudo usermod*)",
      "Bash(sudo groupadd*)",
      "Bash(sudo groupdel*)",
      "Bash(sudo adduser*)",
      "Bash(sudo deluser*)",
      "Bash(sudo chmod 777 /*)",
      "Bash(sudo chown * /*)",
      "Bash(sudo rm /etc/*)",
      "Bash(sudo rm -rf /etc/*)",
      "Bash(sudo rm /bin/*)",
      "Bash(sudo rm /usr/*)",
      "Bash(sudo > /etc/*)",
      "Bash(nc -l*)",
      "Bash(netcat -l*)",
      "Bash(socat*)",
      "Bash(nmap*)",
      "Bash(masscan*)",
      "Bash(*xmrig*)",
      "Bash(*monero*)",
      "Bash(*bitcoin*)",
      "Bash(*miner*)",
      "Bash(git push --force origin master*)",
      "Bash(git push --force origin main*)",
      "Bash(git push -f origin master*)",
      "Bash(git push -f origin main*)",
      "Bash(git reset --hard origin/master*)",
      "Bash(git reset --hard origin/main*)",
      "Bash(cat ~/.aws/*)",
      "Bash(cat ~/.ssh/id_*)",
      "Bash(cat /root/.ssh/*)",
      "Bash(env | base64*)",
      "Bash(printenv | base64*)",
      "Bash(set | base64*)",
      "Bash(bash -i >& /dev/tcp/*)",
      "Bash(sh -i >& /dev/tcp/*)",
      "Bash(python -c 'import socket*)",
      "Bash(php -r '$sock*)",
      "Bash(ruby -rsocket*)",
      "Bash(perl -e 'use Socket*)",
      "Bash(docker run --privileged *)",
      "Bash(docker run --pid=host *)",
      "Bash(docker run --net=host *)",
      "Bash(docker run -v /:/host *)",
      "Bash(docker run -v /etc:/etc *)",
      "Bash(docker run -v /var/run/docker.sock:/var/run/docker.sock *)",
      "Bash(history | grep -i password*)",
      "Bash(history | grep -i token*)",
      "Bash(history | grep -i secret*)",
      "Bash(history | grep -i key*)",
      "Bash(grep -r password /etc/*)",
      "Bash(grep -r token /etc/*)",
      "Bash(find / -name id_rsa*)",
      "Bash(find / -name *.key*)",
      "Bash(find / -name *.pem*)",
      "Bash(shutdown*)",
      "Bash(reboot*)",
      "Bash(halt*)",
      "Bash(poweroff*)",
      "Bash(init 0*)",
      "Bash(init 6*)",
      "Bash(sudo shutdown*)",
      "Bash(sudo reboot*)",
      "Bash(sudo ufw disable*)",
      "Bash(sudo iptables -F*)",
      "Bash(sudo iptables --flush*)",
      "Bash(sudo systemctl stop firewalld*)",
      "Bash(sudo service iptables stop*)",
      "Bash(curl * | sudo *)",
      "Bash(wget * | sudo *)",
      "Bash(curl -s * | sh*)",
      "Bash(wget -qO- * | sh*)",
      "Bash(rm /var/log/*)",
      "Bash(rm -rf /var/log/*)",
      "Bash(> /var/log/*)",
      "Bash(echo > /var/log/*)",
      "Bash(truncate -s 0 /var/log/*)",
      "Bash(npm install -g * --unsafe-perm*)",
      "Bash(pip install * --break-system-packages*)",
      "Bash(gem install * --no-user-install*)",
      "Bash(insmod *)",
      "Bash(rmmod *)",
      "Bash(modprobe *)",
      "Bash(sysctl -w *)",
      "Bash(chmod -R 777 /*)",
      "Bash(chmod 777 /etc/*)",
      "Bash(chmod 777 /bin/*)",
      "Bash(chmod 777 /usr/*)",
      "Bash(chown -R * /*)",
      "Bash(*bitcoin-cli*)",
      "Bash(*ethereum*)",
      "Bash(*wallet.dat*)",
      "Bash(*privatekey*)",
      "Bash(find / -type f -delete*)",
      "Bash(find / -type d -delete*)",
      "Bash(rm -rf /home/*)",
      "Bash(rm -rf /var/*)",
      "Bash(rm -rf /opt/*)",
      "Bash(gdb -p *)",
      "Bash(ptrace *)",
      "Bash(LD_PRELOAD=*)",
      "Bash(sudo -l*)",
      "Bash(sudo -V*)",
      "Bash(sudo su*)",
      "Bash(sudo su -*)",
      "Bash(sudo -i*)",
      "Bash(pkexec *)",
      "Bash(export PATH=*)",
      "Bash(export LD_LIBRARY_PATH=*)",
      "Bash(export PYTHONPATH=*)",
      "Bash(nsenter *)",
      "Bash(docker run --cap-add=ALL *)",
      "Bash(docker run --security-opt *)",
      "Bash(systemctl mask *)",
      "Bash(systemctl disable *)",
      "Bash(systemctl daemon-reload*)",
      "Bash(curl http://169.254.169.254/*)",
      "Bash(wget http://169.254.169.254/*)",
      "Bash(curl http://metadata.google.internal/*)",
      "Bash(exec < /dev/tcp/*)",
      "Bash(exec > /dev/tcp/*)",
      "Bash(exec 3<>/dev/tcp/*)"
    ]
  },
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/scripts/check_command.sh"
          }
        ]
      }
    ]
  }
}
